//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/QLbanhang")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChatLieu", Namespace="http://schemas.datacontract.org/2004/07/QLbanhang")]
    [System.SerializableAttribute()]
    public partial class ChatLieu : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaChatLieuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenChatLieuField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaChatLieu {
            get {
                return this.MaChatLieuField;
            }
            set {
                if ((object.ReferenceEquals(this.MaChatLieuField, value) != true)) {
                    this.MaChatLieuField = value;
                    this.RaisePropertyChanged("MaChatLieu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenChatLieu {
            get {
                return this.TenChatLieuField;
            }
            set {
                if ((object.ReferenceEquals(this.TenChatLieuField, value) != true)) {
                    this.TenChatLieuField = value;
                    this.RaisePropertyChanged("TenChatLieu");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        WindowsFormsApp1.ServiceReference1.CompositeType GetDataUsingDataContract(WindowsFormsApp1.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WindowsFormsApp1.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(WindowsFormsApp1.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertChatLieu", ReplyAction="http://tempuri.org/IService1/InsertChatLieuResponse")]
        int InsertChatLieu(WindowsFormsApp1.ServiceReference1.ChatLieu C);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertChatLieu", ReplyAction="http://tempuri.org/IService1/InsertChatLieuResponse")]
        System.Threading.Tasks.Task<int> InsertChatLieuAsync(WindowsFormsApp1.ServiceReference1.ChatLieu C);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateChatLieu", ReplyAction="http://tempuri.org/IService1/UpdateChatLieuResponse")]
        int UpdateChatLieu(WindowsFormsApp1.ServiceReference1.ChatLieu c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateChatLieu", ReplyAction="http://tempuri.org/IService1/UpdateChatLieuResponse")]
        System.Threading.Tasks.Task<int> UpdateChatLieuAsync(WindowsFormsApp1.ServiceReference1.ChatLieu c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DelChatLieu", ReplyAction="http://tempuri.org/IService1/DelChatLieuResponse")]
        int DelChatLieu(WindowsFormsApp1.ServiceReference1.ChatLieu c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DelChatLieu", ReplyAction="http://tempuri.org/IService1/DelChatLieuResponse")]
        System.Threading.Tasks.Task<int> DelChatLieuAsync(WindowsFormsApp1.ServiceReference1.ChatLieu c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAll", ReplyAction="http://tempuri.org/IService1/GetAllResponse")]
        WindowsFormsApp1.ServiceReference1.ChatLieu[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAll", ReplyAction="http://tempuri.org/IService1/GetAllResponse")]
        System.Threading.Tasks.Task<WindowsFormsApp1.ServiceReference1.ChatLieu[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetChatLieu", ReplyAction="http://tempuri.org/IService1/GetChatLieuResponse")]
        WindowsFormsApp1.ServiceReference1.ChatLieu GetChatLieu(WindowsFormsApp1.ServiceReference1.ChatLieu c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetChatLieu", ReplyAction="http://tempuri.org/IService1/GetChatLieuResponse")]
        System.Threading.Tasks.Task<WindowsFormsApp1.ServiceReference1.ChatLieu> GetChatLieuAsync(WindowsFormsApp1.ServiceReference1.ChatLieu c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckDup", ReplyAction="http://tempuri.org/IService1/CheckDupResponse")]
        string CheckDup(WindowsFormsApp1.ServiceReference1.ChatLieu c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckDup", ReplyAction="http://tempuri.org/IService1/CheckDupResponse")]
        System.Threading.Tasks.Task<string> CheckDupAsync(WindowsFormsApp1.ServiceReference1.ChatLieu c);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WindowsFormsApp1.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WindowsFormsApp1.ServiceReference1.IService1>, WindowsFormsApp1.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WindowsFormsApp1.ServiceReference1.CompositeType GetDataUsingDataContract(WindowsFormsApp1.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WindowsFormsApp1.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(WindowsFormsApp1.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public int InsertChatLieu(WindowsFormsApp1.ServiceReference1.ChatLieu C) {
            return base.Channel.InsertChatLieu(C);
        }
        
        public System.Threading.Tasks.Task<int> InsertChatLieuAsync(WindowsFormsApp1.ServiceReference1.ChatLieu C) {
            return base.Channel.InsertChatLieuAsync(C);
        }
        
        public int UpdateChatLieu(WindowsFormsApp1.ServiceReference1.ChatLieu c) {
            return base.Channel.UpdateChatLieu(c);
        }
        
        public System.Threading.Tasks.Task<int> UpdateChatLieuAsync(WindowsFormsApp1.ServiceReference1.ChatLieu c) {
            return base.Channel.UpdateChatLieuAsync(c);
        }
        
        public int DelChatLieu(WindowsFormsApp1.ServiceReference1.ChatLieu c) {
            return base.Channel.DelChatLieu(c);
        }
        
        public System.Threading.Tasks.Task<int> DelChatLieuAsync(WindowsFormsApp1.ServiceReference1.ChatLieu c) {
            return base.Channel.DelChatLieuAsync(c);
        }
        
        public WindowsFormsApp1.ServiceReference1.ChatLieu[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<WindowsFormsApp1.ServiceReference1.ChatLieu[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public WindowsFormsApp1.ServiceReference1.ChatLieu GetChatLieu(WindowsFormsApp1.ServiceReference1.ChatLieu c) {
            return base.Channel.GetChatLieu(c);
        }
        
        public System.Threading.Tasks.Task<WindowsFormsApp1.ServiceReference1.ChatLieu> GetChatLieuAsync(WindowsFormsApp1.ServiceReference1.ChatLieu c) {
            return base.Channel.GetChatLieuAsync(c);
        }
        
        public string CheckDup(WindowsFormsApp1.ServiceReference1.ChatLieu c) {
            return base.Channel.CheckDup(c);
        }
        
        public System.Threading.Tasks.Task<string> CheckDupAsync(WindowsFormsApp1.ServiceReference1.ChatLieu c) {
            return base.Channel.CheckDupAsync(c);
        }
    }
}
